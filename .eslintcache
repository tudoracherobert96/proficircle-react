[{"C:\\Users\\robert.tudorache\\proficircle-react\\src\\index.js":"1","C:\\Users\\robert.tudorache\\proficircle-react\\src\\App.js":"2","C:\\Users\\robert.tudorache\\proficircle-react\\src\\reportWebVitals.js":"3","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\IntTest.js":"4","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\index.js":"5","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\People.js":"6","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Home.js":"7","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\About.js":"8","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Navbar.js":"9","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Error.js":"10","C:\\Users\\robert.tudorache\\proficircle-react\\src\\data.js":"11","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Jobs.js":"12","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Job.js":"13","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\CitiesList.js":"14","C:\\Users\\robert.tudorache\\proficircle-react\\src\\cities.js":"15","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Form.js":"16","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\BootstrapTest.js":"17","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\menuList.js":"18","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\DragAndDrop.js":"19","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Api.js":"20","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\counter.js":"21","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\index.js":"22","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\isLogged.js":"23","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Counter.js":"24","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Actions\\index.js":"25","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\dataModifier.js":"26","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\people.js":"27","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Person.jsx":"28","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Test.jsx":"29","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\NavbarBs.jsx":"30","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\BootstrapTable.js":"31"},{"size":761,"mtime":1611321810148,"results":"32","hashOfConfig":"33"},{"size":618,"mtime":1610529170894,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1610007326900,"results":"35","hashOfConfig":"33"},{"size":1546,"mtime":1610007326893,"results":"36","hashOfConfig":"33"},{"size":1814,"mtime":1611823810160,"results":"37","hashOfConfig":"33"},{"size":664,"mtime":1611669657930,"results":"38","hashOfConfig":"33"},{"size":199,"mtime":1611145929491,"results":"39","hashOfConfig":"33"},{"size":166,"mtime":1610013334036,"results":"40","hashOfConfig":"33"},{"size":2763,"mtime":1611060660052,"results":"41","hashOfConfig":"33"},{"size":301,"mtime":1610446979407,"results":"42","hashOfConfig":"33"},{"size":217,"mtime":1610110806432,"results":"43","hashOfConfig":"33"},{"size":3084,"mtime":1611821882061,"results":"44","hashOfConfig":"33"},{"size":1650,"mtime":1611821861105,"results":"45","hashOfConfig":"33"},{"size":5773,"mtime":1611821711951,"results":"46","hashOfConfig":"33"},{"size":1283,"mtime":1610114359846,"results":"47","hashOfConfig":"33"},{"size":2540,"mtime":1611822482115,"results":"48","hashOfConfig":"33"},{"size":3111,"mtime":1611910008459,"results":"49","hashOfConfig":"33"},{"size":425,"mtime":1611040392146,"results":"50","hashOfConfig":"33"},{"size":4058,"mtime":1610961811644,"results":"51","hashOfConfig":"33"},{"size":1194,"mtime":1611844074960,"results":"52","hashOfConfig":"33"},{"size":310,"mtime":1611146930542,"results":"53","hashOfConfig":"33"},{"size":415,"mtime":1611151088682,"results":"54","hashOfConfig":"33"},{"size":202,"mtime":1611141074419,"results":"55","hashOfConfig":"33"},{"size":2149,"mtime":1611149977748,"results":"56","hashOfConfig":"33"},{"size":581,"mtime":1611151591958,"results":"57","hashOfConfig":"33"},{"size":277,"mtime":1611150000216,"results":"58","hashOfConfig":"33"},{"size":295,"mtime":1611151564763,"results":"59","hashOfConfig":"33"},{"size":1920,"mtime":1611822271347,"results":"60","hashOfConfig":"33"},{"size":1123,"mtime":1611321994308,"results":"61","hashOfConfig":"33"},{"size":2728,"mtime":1612163068764,"results":"62","hashOfConfig":"33"},{"size":2138,"mtime":1611908017410,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1133ode",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\robert.tudorache\\proficircle-react\\src\\index.js",[],["143","144"],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\App.js",["145","146","147"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport IntTest from \"./Components/IntTest\";\r\nimport ReactRouterSetup from \"./Components/Router/index\";\r\n\r\nfunction App() {\r\n  const [userInfos, setUserInfos] = useState([]);\r\n  useEffect(() => {\r\n    console.log(userInfos);\r\n  }, [userInfos]);\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <h1>{userInfos.length}</h1> */}\r\n      {/* <IntTest userInfos={userInfos} onChangeUserInfos={(newUserInfos) => setUserInfos(newUserInfos)}/> */}\r\n      <ReactRouterSetup />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\reportWebVitals.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\IntTest.js",["148","149","150","151","152"],"import React, {useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n//https://randomuser.me/api\r\nconst API = 'https://randomuser.me/api';\r\n\r\nconst IntTest = (props) => {\r\n    const [counter,setCounter] = useState(0);\r\n    const [userInfos,setUserInfos] = useState(props.userInfos);\r\n\r\n    const fetchRandomData = () => {\r\n        axios.get(API).then((res) => {\r\n            const randomDataResults = res.data.results[0];\r\n            setUserInfos([...userInfos,{\r\n                name:randomDataResults.name.first + \" \" + randomDataResults.name.last,\r\n                url:randomDataResults.picture.large\r\n            }])\r\n            return res;\r\n        }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    useEffect(async () => {\r\n        await fetchRandomData();\r\n    },[]);\r\n\r\n    useEffect(async () => {\r\n        props.onChangeUserInfos(userInfos);\r\n    },[userInfos]);\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n            <h1>{counter}</h1>\r\n            <button className=\"btn\" onClick={() => setCounter(counter + 1)}>Increase</button>\r\n            <button className=\"btn\" onClick={() => fetchRandomData()}>Fetch Random Data</button>\r\n            <div>\r\n                {userInfos.map((userInfo) => {\r\n                    return <div key={userInfo.url}>\r\n                        <p>Name : {userInfo.name}</p>\r\n                        <img src={userInfo.url} />\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IntTest;","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\index.js",["153"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport People from \"./People\";\r\nimport Error from \"./Error\";\r\nimport Person from \"./Person\";\r\nimport Jobs from \"./Jobs\";\r\nimport Form from \"./Form\";\r\nimport Test from \"./Test\";\r\nimport Job from \"./Job\";\r\nimport CitiesList from \"./CitiesList\";\r\nimport Api from \"./Api\";\r\nimport BootstrapTest from \"./BootstrapTest\";\r\n\r\nimport NavbarBs from \"./NavbarBs\";\r\nimport { data } from \"./../../data\";\r\n\r\n//TODO ADD JOBS COMPONENT\r\n\r\nconst ReactRouterSetup = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const onChangeMessages = (newMessage) => {\r\n    setMessages([...messages, newMessage]);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <NavbarBs />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/people\">\r\n          <People />\r\n        </Route>\r\n        <Route path=\"/form\">\r\n          <Form onChangeMessages={onChangeMessages} />\r\n        </Route>\r\n        <Route path=\"/bootstrap\">\r\n          <BootstrapTest />\r\n        </Route>\r\n        <Route path=\"/jobs\">\r\n          <Jobs />\r\n        </Route>\r\n        <Route path=\"/api\">\r\n          <Api />\r\n        </Route>\r\n        <Route path=\"/test\">\r\n          <Test />\r\n        </Route>\r\n        <Route path=\"/job/:id\">\r\n          <Job />\r\n        </Route>\r\n        <Route path=\"/person/:id\">\r\n          <Person />\r\n        </Route>\r\n        <Route path=\"/:id/cities\">\r\n          <CitiesList />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ReactRouterSetup;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\People.js",["154","155"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst People = () => {\r\n  const data = useSelector((state) => state.people);\r\n  const [people, setPeople] = useState(data);\r\n  console.log(people);\r\n  return (\r\n    <div>\r\n      <h1>People page</h1>\r\n      {people.map((person) => {\r\n        return (\r\n          <div key={person.id} className=\"item\">\r\n            <Link to={\"/person/\" + person.id}>{person.name}</Link>\r\n            <Link to={person.id + \"/cities\"}>Edit City</Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Home.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\About.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Navbar.js",["156","157","158","159"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { menuList } from \"./menuList\";\r\n\r\nconst Navbar = () => {\r\n  const [showNav, setShowNav] = useState(false);\r\n  const [showTest, setShowTest] = useState(false);\r\n  const [listItems, setListItems] = useState(menuList);\r\n  const setSubMenu = (top, z, time) => {\r\n    setShowTest(true);\r\n    setTimeout(() => {\r\n      document.getElementById(\"test\").style.zIndex = z;\r\n    }, time);\r\n    setTimeout(() => {\r\n      setShowNav(!showNav);\r\n      document.getElementById(\"test\").style.top = top;\r\n    }, 200);\r\n  };\r\n  const makeAnimationEnd = () => {\r\n    document.getElementsByClassName(\"finalRotateBar\")[0].style.transform =\r\n      \"rotate(0deg)\";\r\n    setSubMenu(\"70px\", \"-1\", 200);\r\n  };\r\n  const makeAnimationStart = () => {\r\n    document.getElementsByClassName(\"initialRotateBar\")[0].style.transform =\r\n      \"rotate(90deg)\";\r\n    setSubMenu(\"110px\", \"0\", 1000);\r\n  };\r\n  const displayTest = () => {\r\n    if (showTest == true) {\r\n      return (\r\n        <div className=\"underlineMenu\">\r\n          <div className=\"subMenuItems\" id=\"test\">\r\n            Test\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const setShow = (isShown) => {\r\n    setShowTest(isShown);\r\n    setShowNav(isShown);\r\n  };\r\n  const displayOptions = () => {\r\n    if (showNav == true) {\r\n      return (\r\n        <div className=\"row\">\r\n          {listItems.map((item) => {\r\n            return (\r\n              <div\r\n                className=\"col-lg-1\"\r\n                key={item.name}\r\n                onClick={() => setShow(false)}\r\n              >\r\n                <Link to={item.path} className=\"btnOld\">\r\n                  {item.name}\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n          <div\r\n            className=\"offset-lg-5 col-lg-1\"\r\n            onClick={() => makeAnimationEnd()}\r\n          >\r\n            <FaBars className=\"finalRotateBar btnFaBars btnRotate\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"offset-lg-11 col-lg-1\"\r\n            id=\"show\"\r\n            onClick={() => makeAnimationStart()}\r\n          >\r\n            <FaBars className=\"initialRotateBar btnFaBars\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n          background: \"white\",\r\n        }}\r\n        className=\"col-lg-12 col-md-12\"\r\n      >\r\n        {displayOptions()}\r\n      </div>\r\n      {displayTest()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",["160","161"],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Error.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\data.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Jobs.js",["162"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Jobs = () => {\r\n  const data = useSelector((state) => state.people);\r\n  const [people, setPeople] = useState(data);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const removePerson = (e) => {\r\n    const newPeople = people.filter((person) => person.id != e.target.id);\r\n    setPeople(newPeople);\r\n  };\r\n  const changeNullText = (inputField, tag) => {\r\n    if (inputField.value.length === 0) {\r\n      console.log(tag.id);\r\n      document.getElementById(tag.id).innerHTML =\r\n        '<p class=\"error\">Insert a value!</p>' +\r\n        document.getElementById(tag.id).innerHTML;\r\n    }\r\n  };\r\n  const addNewPerson = () => {\r\n    const name = document.getElementById(\"inputNewPersonName\");\r\n    const namePTag = document.getElementById(\"name\");\r\n    const job = document.getElementById(\"inputNewPersonJob\");\r\n    const jobPTag = document.getElementById(\"job\");\r\n    document.querySelectorAll(\".error\").forEach((elem) => elem.remove());\r\n\r\n    if (name.value.length > 0 && job.value.length > 0) {\r\n      name.style = { background: \"white\" };\r\n      const newPerson = {\r\n        id: people[people.length - 1].id + 1,\r\n        name: name.value,\r\n        job: job.value,\r\n      };\r\n      const newPeople = [...people, newPerson];\r\n      setPeople(newPeople);\r\n      setIsModalOpen(false);\r\n    }\r\n    changeNullText(name, namePTag);\r\n    changeNullText(job, jobPTag);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Jobs Component</h1>\r\n      {people.map((person) => {\r\n        return (\r\n          <div key={person.id} className=\"item\">\r\n            <p>{person.name}</p>\r\n            <p>{person.job}</p>\r\n            <p>\r\n              <Link to={\"/job/\" + person.id} className=\"btn\">\r\n                View Job\r\n              </Link>\r\n            </p>\r\n            <button className=\"btn\" onClick={removePerson} id={person.id}>\r\n              Remove Person\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <footer>\r\n        <button className=\"btn\" onClick={() => setIsModalOpen(true)}>\r\n          Add\r\n        </button>\r\n      </footer>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        ariaHideApp={false}\r\n      >\r\n        <h1>Add Person Modal</h1>\r\n        <div className=\"item\">\r\n          <p>Name</p>\r\n          <p id=\"name\">\r\n            <input type=\"text\" defaultValue=\"\" id=\"inputNewPersonName\" />\r\n          </p>\r\n        </div>\r\n        <div className=\"item\">\r\n          <p>Job</p>\r\n          <p id=\"job\">\r\n            <input type=\"text\" defaultValue=\"\" id=\"inputNewPersonJob\" />\r\n          </p>\r\n        </div>\r\n        <footer>\r\n          <button className=\"btn\" onClick={addNewPerson}>\r\n            Add\r\n          </button>\r\n          <button className=\"btn\" onClick={() => setIsModalOpen(false)}>\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Job.js",["163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { modify } from \"../../Actions\";\r\n\r\nconst Job = () => {\r\n  //const [people,setPeople] = useState(props.data);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const { id } = useParams();\r\n  const [job, setJob] = useState(\"\");\r\n  const data = useSelector((state) => state.people);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setJob(data[id - 1].job);\r\n  }, []);\r\n  useEffect(() => {\r\n    const newPeople = data;\r\n    newPeople[id - 1].job = job;\r\n    dispatch(modify(newPeople));\r\n  }, [job]);\r\n  const saveNewJob = () => {\r\n    const newJob = document.getElementById(\"inputNewJob\").value;\r\n    setJob(newJob);\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Job Component</h1>\r\n      <div className=\"item\">\r\n        <h3>{job}</h3>\r\n        <button className=\"btn\" onClick={() => setIsModalOpen(!isModalOpen)}>\r\n          Edit\r\n        </button>\r\n      </div>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        ariaHideApp={false}\r\n      >\r\n        <h3>Edit Job</h3>\r\n        <input type=\"text\" defaultValue={job} id=\"inputNewJob\" />\r\n        <footer>\r\n          <button className=\"btn\" onClick={saveNewJob}>\r\n            Save\r\n          </button>\r\n          <button className=\"btn\" onClick={() => setIsModalOpen(false)}>\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\CitiesList.js",["165","166","167","168","169","170","171","172","173","174"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { cities } from \"../../cities\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { push, modify } from \"../../Actions\";\r\n\r\nconst CitiesList = () => {\r\n  const redPeople = useSelector((state) => state.people);\r\n  const dispatch = useDispatch();\r\n  const [person, setPerson] = useState(null);\r\n  const [people, setPeople] = useState(redPeople);\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(cities);\r\n  const [city, setCity] = useState(null);\r\n  const [sector, setSector] = useState(null);\r\n  const [zone, setZone] = useState(null);\r\n  const [sectors, setSectors] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const selectedPerson = redPeople.filter((person) => person.id == id);\r\n      await setPerson(selectedPerson[0]);\r\n      if (\r\n        selectedPerson[0] &&\r\n        selectedPerson[0].city &&\r\n        selectedPerson[0].sector &&\r\n        selectedPerson[0].zone\r\n      ) {\r\n        await setCity(selectedPerson[0].city);\r\n        await setSector(selectedPerson[0].sector);\r\n        await setZone(selectedPerson[0].zone);\r\n        const newSectors = cities.filter(\r\n          (city) => city.city == selectedPerson[0].city\r\n        );\r\n        await setSectors(newSectors[0].sectors);\r\n        const newZones = newSectors[0].sectors.filter(\r\n          (sector) => sector.name == selectedPerson[0].sector\r\n        );\r\n        await setZones(newZones[0].zones);\r\n        console.log(\r\n          selectedPerson[0].city,\r\n          selectedPerson[0].sector,\r\n          selectedPerson[0].zone\r\n        );\r\n        if (\r\n          selectedPerson &&\r\n          selectedPerson[0] &&\r\n          selectedPerson[0].city &&\r\n          selectedPerson[0].sector &&\r\n          selectedPerson[0].zone\r\n        ) {\r\n          document.getElementById(selectedPerson[0].city).classList =\r\n            \"cities selectedBtn\";\r\n          document.getElementById(selectedPerson[0].sector).classList =\r\n            \"sectors selectedBtn\";\r\n          document.getElementById(selectedPerson[0].zone).classList =\r\n            \"zones selectedBtn\";\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (people && person) {\r\n      let newPeople = people.map((x) => (x.id == person.id ? person : x));\r\n      dispatch(modify(newPeople));\r\n    }\r\n  }, [person]);\r\n\r\n  const updateCity = (elem) => {\r\n    setSectors(elem.sectors);\r\n    setZones([]);\r\n    setCity(elem.city);\r\n    setSector(null);\r\n    setZone(null);\r\n    document\r\n      .querySelectorAll(\".cities\")\r\n      .forEach((city) => (city.classList = \"cities nonSelectedBtn\"));\r\n    document.getElementById(elem.city).classList = \"cities selectedBtn\";\r\n  };\r\n  const updateSector = (sector) => {\r\n    setZone(null);\r\n    setSector(sector.name);\r\n    setZones(sector.zones);\r\n    document\r\n      .querySelectorAll(\".sectors\")\r\n      .forEach((sector) => (sector.classList = \"sectors nonSelectedBtn\"));\r\n    document.getElementById(sector.name).classList = \"sectors selectedBtn\";\r\n  };\r\n  const updateZone = (zone) => {\r\n    setZone(zone);\r\n    document\r\n      .querySelectorAll(\".zones\")\r\n      .forEach((zone) => (zone.classList = \"zones nonSelectedBtn\"));\r\n    document.getElementById(zone).classList = \"zones selectedBtn\";\r\n  };\r\n  const savePerson = () => {\r\n    if (city && sector && zone) {\r\n      const newPerson = { ...person, city: city, sector: sector, zone: zone };\r\n      //console.log(newPerson);\r\n      setPerson(newPerson);\r\n      //history.clear();\r\n      setTimeout(() => {\r\n        history.push(\"/people\");\r\n      }, 500);\r\n      //history.goBack();\r\n    } else {\r\n      window.alert(\"Please select the city, sector and zone!\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Cities Component</h1>\r\n      <h3>Select cities for {person && person.name ? person.name : \"\"}</h3>\r\n      <div style={{ textAlign: \"center\", display: \"flex\" }}>\r\n        <div style={{ flex: \"1\" }}>\r\n          <h3>Cities</h3>\r\n          <ul>\r\n            {data.map((elem) => {\r\n              return (\r\n                <li\r\n                  key={elem.city}\r\n                  className=\"cities nonSelectedBtn\"\r\n                  id={elem.city}\r\n                  onClick={() => updateCity(elem)}\r\n                >\r\n                  {elem.city}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div style={{ flex: \"1\" }}>\r\n          <h3>Sectors</h3>\r\n          <ul>\r\n            {sectors.map((sector) => {\r\n              return (\r\n                <li\r\n                  key={sector.name}\r\n                  className=\"sectors nonSelectedBtn\"\r\n                  id={sector.name}\r\n                  onClick={() => updateSector(sector)}\r\n                >\r\n                  {sector.name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div style={{ flex: \"1\" }}>\r\n          <h3>Zones</h3>\r\n          <ul>\r\n            {zones.map((zone) => {\r\n              return (\r\n                <li\r\n                  key={zone}\r\n                  className=\"zones nonSelectedBtn\"\r\n                  id={zone}\r\n                  onClick={() => updateZone(zone)}\r\n                >\r\n                  {zone}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <button className=\"btn\" onClick={() => savePerson()}>\r\n          Save\r\n        </button>\r\n        <Link to=\"/people\" className=\"btn\">\r\n          Cancel\r\n        </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CitiesList;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\cities.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Form.js",["175","176","177"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Form = (props) => {\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const saveForm = () => {\r\n    const newMessage = document.getElementById(\"inputMessage\").value;\r\n    const newEmail = document.getElementById(\"inputEmail\").value;\r\n    if (newMessage.length > 0) {\r\n      if (validateEmail(newEmail)) {\r\n        setMessage({ message: newMessage, email: newEmail });\r\n        props.onChangeMessages({ message: newMessage, email: newEmail });\r\n      } else {\r\n        window.alert(\"Incorrect email format!\");\r\n      }\r\n    } else {\r\n      window.alert(\"Please type a message!\");\r\n    }\r\n  };\r\n  function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>Send us a message</h1>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div style={{ float: \"left\", width: \"50%\", textAlign: \"right\" }}>\r\n          <div className=\"item\">\r\n            <b className=\"form\">Message:</b>\r\n            <input\r\n              className=\"form\"\r\n              type=\"text\"\r\n              defaultValue=\"Message...\"\r\n              id=\"inputMessage\"\r\n              onFocus={() =>\r\n                (document.getElementById(\"inputMessage\").value = \"\")\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <b className=\"form\">Email:</b>\r\n            <input\r\n              className=\"form\"\r\n              type=\"text\"\r\n              defaultValue=\"example@domain\"\r\n              id=\"inputEmail\"\r\n              onFocus={() => (document.getElementById(\"inputEmail\").value = \"\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            float: \"left\",\r\n            width: \"50%\",\r\n            padding: \"50px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <iframe\r\n            width=\"420\"\r\n            height=\"315\"\r\n            src=\"https://www.youtube.com/embed/tgbNymZ7vqY\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ width: \"100%\" }}>\r\n        <button className=\"btn\" onClick={() => saveForm()}>\r\n          Send\r\n        </button>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Home\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\BootstrapTest.js",["178","179"],"import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Table, Input } from \"react-bootstrap\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport DragAndDrop from \"./DragAndDrop\";\r\nimport BootstrapTable from \"./BootstrapTable\";\r\n\r\nconst BootstrapTest = () => {\r\n  const [dateTime, setDateTime] = useState(new Date());\r\n\r\n  const sendDateTime = () => {\r\n    console.log(dateTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"A\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"offset-lg-4 offset-xs-4 col-md-4 col-sm-4 col-lg-4 col-xs-4 col-md-4 mx-auto header\">\r\n            <h1>Header test</h1>\r\n            <p>\r\n              Lorem impsum test test Lorem impsum test test Lorem impsum test\r\n              test Lorem impsum test test Lorem impsum test test Lorem impsum\r\n              test test\r\n            </p>\r\n            <div className=\"col-lg-12 col-sm-12\">\r\n              <Button className=\"col-lg-5 col-xs-12\">Test Btn</Button>\r\n              <Button className=\"offset-lg-1 col-lg-5 col-xs-12\">\r\n                Test Btn\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"offset-lg-3 offset-sm-3 col-lg-6 col-sm-6\">\r\n            <h1>Date Time Picker</h1>\r\n            <DateTimePicker\r\n              value={dateTime}\r\n              onChange={setDateTime}\r\n              minDate={new Date()}\r\n            />\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"offset-lg-4 col-lg-4 mx-auto\">\r\n                {dateTime.toString()}\r\n                <Button onClick={() => sendDateTime()}>Send</Button>\r\n              </div>\r\n            </div>\r\n            <DragAndDrop />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 col-sm-6 col-xs-12\">\r\n                  <Button>A</Button>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 col-sm-6 col-xs-12\">\r\n                  <Button>A</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <Button>A</Button>\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <Button>A</Button>\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <Button>A</Button>\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <Button>A</Button>\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-4 col-sm-6 col-xs-12\">\r\n            <BootstrapTable />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BootstrapTest;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\menuList.js",["180"],"import React from \"react\";\r\n\r\nexport const menuList = [\r\n  {\r\n    name: \"Home\",\r\n    path: \"/\",\r\n  },\r\n  {\r\n    name: \"About\",\r\n    path: \"/about\",\r\n  },\r\n  {\r\n    name: \"People\",\r\n    path: \"/people\",\r\n  },\r\n  {\r\n    name: \"Jobs\",\r\n    path: \"/jobs\",\r\n  },\r\n  {\r\n    name: \"Form\",\r\n    path: \"/form\",\r\n  },\r\n  {\r\n    name: \"BootstrapTest\",\r\n    path: \"/bootstrap\",\r\n  },\r\n  {\r\n    name: \"Api\",\r\n    path: \"/api\",\r\n  },\r\n];\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\DragAndDrop.js",["181"],"import React from \"react\";\r\n\r\nconst DragAndDrop = () => {\r\n  let dropzone = document.getElementById(\"dropzone\");\r\n  let nodes = document.getElementsByClassName(\"node\");\r\n  let selectedNode = \"\";\r\n  let selectedNodePos = 0;\r\n  const nodesMouseDown = (e) => {\r\n    console.log(e.target.id);\r\n    document.getElementById(e.target.id).style.backgroundColor = \"tomato\";\r\n  };\r\n  const dropzoneDragOver = (e) => {\r\n    e.preventDefault();\r\n    whereAmI(e.clientY);\r\n  };\r\n  const dropzoneDrop = (e) => {\r\n    e.preventDefault();\r\n\r\n    dropzone.insertBefore(selectedNode, dropzone.children[selectedNodePos]);\r\n\r\n    resetNodes();\r\n\r\n    setTimeout(() => {\r\n      selectedNode.style.backgroundColor = \"cornsilk\";\r\n      selectedNode.style.transition = \"2s\";\r\n    }, 300);\r\n  };\r\n  const nodeDragStart = (e) => {\r\n    e.dataTransfer.setData(\"text\", e.target.id);\r\n\r\n    dropzone = document.getElementById(\"dropzone\");\r\n\r\n    selectedNode = document.getElementById(e.target.id);\r\n    setTimeout(() => {\r\n      dropzone.removeChild(selectedNode);\r\n    }, 0);\r\n  };\r\n  const establishNodePositions = () => {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let element = document.getElementById(nodes[i][\"id\"]);\r\n      let position = element.getBoundingClientRect();\r\n      let yTop = position.top;\r\n      let yBottom = position.bottom;\r\n      nodes[i][\"yPos\"] = yTop + (yBottom - yTop) / 2;\r\n    }\r\n  };\r\n  const resetNodes = () => {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      document.getElementById(nodes[i][\"id\"]).style.marginTop = \"0.5em\";\r\n    }\r\n  };\r\n  const whereAmI = (currentYPos) => {\r\n    establishNodePositions();\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i][\"yPos\"] < currentYPos) {\r\n        var nodeAbove = document.getElementById(nodes[i][\"id\"]);\r\n        selectedNodePos = i + 1;\r\n      } else {\r\n        if (!nodeBelow) {\r\n          var nodeBelow = document.getElementById(nodes[i][\"id\"]);\r\n        }\r\n      }\r\n\r\n      if (typeof nodeAbove == \"undefined\") {\r\n        selectedNodePos = 0;\r\n      }\r\n\r\n      resetNodes();\r\n\r\n      if (typeof nodeBelow == \"object\") {\r\n        nodeBelow.style.marginTop = \"3em\";\r\n        nodeBelow.style.transition = \"1.8s\";\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div\r\n        className=\"offset-lg-3 col-lg-6 mx-auto\"\r\n        id=\"dropzone\"\r\n        onDragOver={dropzoneDragOver}\r\n        onDrop={dropzoneDrop}\r\n      >\r\n        <div\r\n          id=\"record-id-23\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Watches\r\n        </div>\r\n        <div\r\n          id=\"record-id-32\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Gold\r\n        </div>\r\n        <div\r\n          id=\"record-id-15\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Silver\r\n        </div>\r\n        <div\r\n          id=\"record-id-44\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Copper\r\n        </div>\r\n        <div\r\n          id=\"record-id-5\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Charms\r\n        </div>\r\n        <div\r\n          id=\"record-id-76\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Designer\r\n        </div>\r\n        <div\r\n          id=\"record-id-25\"\r\n          className=\"node\"\r\n          draggable=\"true\"\r\n          onMouseDown={nodesMouseDown}\r\n          onDragStart={nodeDragStart}\r\n        >\r\n          Test\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDrop;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Api.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\counter.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\index.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\isLogged.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Counter.js",["182"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, incrementBy, insertToData, modifyToData } from \"../Actions\";\r\n\r\nfunction Counter() {\r\n  const count = useSelector((state) => state.counter);\r\n  const dataModifier = useSelector((state) => state.dataModifier);\r\n  const [isShown, setIsShown] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      document.title = \"New Messages(\" + count + \")\";\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(dataModifier);\r\n  }, [dataModifier]);\r\n\r\n  const increaseCounter = () => {\r\n    dispatch(increment());\r\n  };\r\n\r\n  const increaseCounterByFive = () => {\r\n    dispatch(incrementBy(5));\r\n  };\r\n\r\n  const createNewObject = () => {\r\n    return {\r\n      name: document.getElementById(\"inputNewName\").value,\r\n      email: document.getElementById(\"inputNewEmail\").value,\r\n      description: document.getElementById(\"inputNewDescription\").value,\r\n    };\r\n  };\r\n  const insertObject = () => {\r\n    let newObject = createNewObject();\r\n    dispatch(insertToData(newObject));\r\n  };\r\n  const modifyObject = () => {\r\n    let newObject = createNewObject();\r\n    let newArray = dataModifier.filter(\r\n      (data) => data.name !== dataModifier[0].name\r\n    );\r\n    dispatch(modifyToData([newObject, ...newArray]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Simple counter</h2>\r\n      {isShown && <p>{count}</p>}\r\n      <button id=\"increaseBtn\" onClick={() => increaseCounter()}>\r\n        Increase Counter\r\n      </button>\r\n      <button id=\"decreaseBtn\" onClick={() => increaseCounterByFive()}>\r\n        Increase Counter By 5\r\n      </button>\r\n      <button id=\"hideBtn\" onClick={() => setIsShown(!isShown)}>\r\n        Hide/Show Counter\r\n      </button>\r\n      <input id=\"inputNewName\" defaultValue=\"\" />\r\n      <input id=\"inputNewEmail\" defaultValue=\"\" />\r\n      <input id=\"inputNewDescription\" defaultValue=\"\" />\r\n      <button onClick={() => insertObject()}>Insert</button>\r\n      <button onClick={() => modifyObject()}>Modify first</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Actions\\index.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\dataModifier.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Reducers\\people.js",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Person.jsx",["183"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modify } from \"../../Actions\";\r\n\r\nconst Person = () => {\r\n  const data = useSelector((state) => state.people);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setName(data[id - 1].name);\r\n  }, []);\r\n\r\n  const saveName = () => {\r\n    const newPeople = data;\r\n    newPeople[id - 1].name = document.getElementById(\"inputName\").value;\r\n    dispatch(modify(newPeople));\r\n    setName(newPeople[id - 1].name);\r\n    setIsModalActive(false);\r\n  };\r\n  const gotoNextPage = () => {\r\n    history.push(\"/test\", { params: \"test\" });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 id=\"header\">Person page</h1>\r\n      <p id=\"name\">{name}</p>\r\n      <p id=\"fullname\" onClick={() => gotoNextPage()}>\r\n        See full name\r\n      </p>\r\n      <h3\r\n        className=\"btn\"\r\n        id=\"btnOpenModal\"\r\n        onClick={() => setIsModalActive(!isModalActive)}\r\n      >\r\n        Test modal\r\n      </h3>\r\n      <Modal\r\n        isOpen={isModalActive}\r\n        onRequestClose={() => setIsModalActive(false)}\r\n        ariaHideApp={false}\r\n      >\r\n        <h1>Modal header</h1>\r\n        <div>\r\n          <input type=\"text\" defaultValue=\"\" id=\"inputName\"></input>\r\n          <button className=\"btn\" id=\"btnSaveModal\" onClick={saveName}>\r\n            Save\r\n          </button>\r\n          <button className=\"btn\" onClick={() => setIsModalActive(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <Link to=\"/people\" className=\"btn\">\r\n        Back to People\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\Test.jsx",["184","185","186"],"import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst Test = () => {\r\n  const location = useLocation();\r\n  const [image, setImage] = useState(undefined);\r\n  const [isModalShown, setIsModalShown] = useState(false);\r\n  const selectFile = (e) => {\r\n    console.log(e.target.files[0]);\r\n    setImage(e.target.files[0].name);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {location.state.params && <h1>{location.state.params}</h1>}\r\n        <input type=\"file\" onChange={selectFile} />\r\n        {image && (\r\n          <img\r\n            width=\"100px\"\r\n            height=\"100px\"\r\n            style={{ border: \"1px solid black\" }}\r\n            src={image}\r\n            onClick={() => setIsModalShown(!isModalShown)}\r\n          />\r\n        )}\r\n      </div>\r\n      <Modal show={isModalShown} onHide={() => setIsModalShown(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <img src={image} />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\NavbarBs.jsx",[],"C:\\Users\\robert.tudorache\\proficircle-react\\src\\Components\\Router\\BootstrapTable.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":12},{"ruleId":"191","severity":1,"message":"195","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":15},{"ruleId":"191","severity":1,"message":"196","line":8,"column":21,"nodeType":"193","messageId":"194","endLine":8,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":23,"column":15,"nodeType":"199","endLine":25,"endColumn":6},{"ruleId":"197","severity":1,"message":"200","line":25,"column":7,"nodeType":"201","endLine":25,"endColumn":9,"suggestions":"202"},{"ruleId":"197","severity":1,"message":"198","line":27,"column":15,"nodeType":"199","endLine":29,"endColumn":6},{"ruleId":"197","severity":1,"message":"203","line":29,"column":7,"nodeType":"201","endLine":29,"endColumn":18,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":41,"column":25,"nodeType":"207","endLine":41,"endColumn":51},{"ruleId":"191","severity":1,"message":"208","line":18,"column":10,"nodeType":"193","messageId":"194","endLine":18,"endColumn":14},{"ruleId":"191","severity":1,"message":"209","line":3,"column":23,"nodeType":"193","messageId":"194","endLine":3,"endColumn":34},{"ruleId":"191","severity":1,"message":"210","line":7,"column":18,"nodeType":"193","messageId":"194","endLine":7,"endColumn":27},{"ruleId":"191","severity":1,"message":"211","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":16},{"ruleId":"191","severity":1,"message":"212","line":10,"column":21,"nodeType":"193","messageId":"194","endLine":10,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":32,"column":18,"nodeType":"215","messageId":"216","endLine":32,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":47,"column":17,"nodeType":"215","messageId":"216","endLine":47,"endColumn":19},{"ruleId":"187","replacedBy":"217"},{"ruleId":"189","replacedBy":"218"},{"ruleId":"213","severity":1,"message":"219","line":12,"column":59,"nodeType":"215","messageId":"216","endLine":12,"endColumn":61},{"ruleId":"197","severity":1,"message":"220","line":18,"column":6,"nodeType":"201","endLine":18,"endColumn":8,"suggestions":"221"},{"ruleId":"197","severity":1,"message":"222","line":23,"column":6,"nodeType":"201","endLine":23,"endColumn":11,"suggestions":"223"},{"ruleId":"191","severity":1,"message":"224","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":27},{"ruleId":"191","severity":1,"message":"225","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":14},{"ruleId":"191","severity":1,"message":"210","line":11,"column":18,"nodeType":"193","messageId":"194","endLine":11,"endColumn":27},{"ruleId":"191","severity":1,"message":"226","line":13,"column":16,"nodeType":"193","messageId":"194","endLine":13,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":23,"column":69,"nodeType":"215","messageId":"216","endLine":23,"endColumn":71},{"ruleId":"213","severity":1,"message":"214","line":35,"column":31,"nodeType":"215","messageId":"216","endLine":35,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":39,"column":35,"nodeType":"215","messageId":"216","endLine":39,"endColumn":37},{"ruleId":"197","severity":1,"message":"227","line":63,"column":6,"nodeType":"201","endLine":63,"endColumn":8,"suggestions":"228"},{"ruleId":"213","severity":1,"message":"214","line":66,"column":47,"nodeType":"215","messageId":"216","endLine":66,"endColumn":49},{"ruleId":"197","severity":1,"message":"229","line":69,"column":6,"nodeType":"201","endLine":69,"endColumn":14,"suggestions":"230"},{"ruleId":"191","severity":1,"message":"231","line":2,"column":16,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"232","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":61,"column":11,"nodeType":"207","endLine":65,"endColumn":12},{"ruleId":"191","severity":1,"message":"235","line":3,"column":18,"nodeType":"193","messageId":"194","endLine":3,"endColumn":23},{"ruleId":"191","severity":1,"message":"236","line":3,"column":25,"nodeType":"193","messageId":"194","endLine":3,"endColumn":30},{"ruleId":"191","severity":1,"message":"237","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":13},{"ruleId":"238","severity":1,"message":"239","line":60,"column":14,"nodeType":"193","messageId":"240","endLine":60,"endColumn":23},{"ruleId":"197","severity":1,"message":"241","line":15,"column":6,"nodeType":"201","endLine":15,"endColumn":8,"suggestions":"242"},{"ruleId":"197","severity":1,"message":"220","line":17,"column":6,"nodeType":"201","endLine":17,"endColumn":8,"suggestions":"243"},{"ruleId":"191","severity":1,"message":"211","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":19,"column":11,"nodeType":"207","endLine":25,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":31,"column":13,"nodeType":"207","endLine":31,"endColumn":32},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'IntTest' is defined but never used.","'setUserInfos' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchRandomData'. Either include it or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is defined but never used.","'useDispatch' is defined but never used.","'setPeople' is assigned a value but never used.","'Button' is defined but never used.","'setListItems' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["244"],["245"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'data', 'dispatch', and 'id'. Either include them or remove the dependency array.",["249"],"'useContext' is defined but never used.","'push' is defined but never used.","'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'redPeople'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'dispatch' and 'people'. Either include them or remove the dependency array.",["251"],"'useHistory' is defined but never used.","'message' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Table' is defined but never used.","'Input' is defined but never used.","'React' is defined but never used.","no-use-before-define","'nodeBelow' was used before it was defined.","usedBeforeDefined","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["252"],["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"258","fix":"268"},"Update the dependencies array to be: [fetchRandomData]",{"range":"269","text":"270"},"Update the dependencies array to be: [props, userInfos]",{"range":"271","text":"272"},"Update the dependencies array to be: [data, id]",{"range":"273","text":"274"},"Update the dependencies array to be: [data, dispatch, id, job]",{"range":"275","text":"276"},"Update the dependencies array to be: [id, redPeople]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, people, person]",{"range":"279","text":"280"},"Update the dependencies array to be: [count]",{"range":"281","text":"282"},{"range":"283","text":"274"},[816,818],"[fetchRandomData]",[904,915],"[props, userInfos]",[587,589],"[data, id]",[716,721],"[data, dispatch, id, job]",[2328,2330],"[id, redPeople]",[2508,2516],"[dispatch, people, person]",[536,538],"[count]",[593,595]]